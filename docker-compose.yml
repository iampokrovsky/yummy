version: "3.9"

services:

  app:
    image: hw5
    build: .
    container_name: app
    env_file: .env
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres
    container_name: db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    environment:
      POSTGRES_USER: "${DB_USER:-user}"
      POSTGRES_PASSWORD: "${DB_PASS:-pass}"
      POSTGRES_DB: "${DB_NAME:-test_db}"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  goose:
    image: goose
    build: ./migrations
    container_name: goose
    environment:
      DB_USER: "${DB_USER:-user}"
      DB_PASS: "${DB_PASS:-pass}"
      DB_NAME: "${DB_NAME:-test_db}"
    volumes:
      - ./migrations:/migrations # TODO Убрать
    depends_on:
      postgres:
        condition: service_healthy

  pgweb:
    image: sosedoff/pgweb
    container_name: pgweb
    restart: always
    environment:
      PGWEB_DATABASE_URL: "db://${DB_USER:-user}:${DB_PASS:-pass}@db:${DB_PORT:-5432}/${DB_NAME:-test_db}?sslmode=disable"
    ports:
      - "${PGWEB_PORT:-8081}:8081"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pg_data:
